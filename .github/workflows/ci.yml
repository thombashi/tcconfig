name: CI

on:
  push:
    branches:
      - master
    paths-ignore:
      - ".gitignore"
      - "README.rst"
  pull_request:
    paths-ignore:
      - ".gitignore"
      - "README.rst"

permissions:
  contents: read

env:
  BIN_NAME: tcconfig
  DIST_DIR_NAME: dist

jobs:
  build-deb-package:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 20

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04, ubuntu-24.04]

    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: pip
          cache-dependency-path: |
            setup.py
            **/*requirements.txt
            tox.ini

      - name: Install dependencies
        run: |
          sudo apt-get update -qq
          sudo apt-get install -qq -y --no-install-recommends fakeroot

      - name: Build a deb package
        run: ./scripts/build_deb_package.sh

      - name: Test installation from a deb package
        run: sudo dpkg -i ${{ env.DIST_DIR_NAME }}/${{ env.BIN_NAME }}_*.deb

      - uses: actions/upload-artifact@v4
        with:
          name: binaries-${{ matrix.os }}
          path: ${{ env.DIST_DIR_NAME }}/${{ env.BIN_NAME }}_*.deb
          if-no-files-found: error
          retention-days: 1

  build-wheel-package:
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.event_name }}-${{ github.workflow }}-${{ github.ref_name }}-build
      cancel-in-progress: true
    timeout-minutes: 20

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: pip
          cache-dependency-path: |
            setup.py
            **/*requirements.txt
            tox.ini

      - run: make setup-ci

      - run: make build

  lint:
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.event_name }}-${{ github.workflow }}-${{ github.ref_name }}-lint
      cancel-in-progress: true
    timeout-minutes: 20

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: pip
          cache-dependency-path: |
            setup.py
            **/*requirements.txt
            tox.ini

      - run: make setup-ci

      - run: make check

  unit-test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
        os: [ubuntu-latest]
    concurrency:
      group: ${{ github.event_name }}-${{ github.workflow }}-unit-test-${{ matrix.os }}-${{ matrix.python-version }}
      cancel-in-progress: true
    timeout-minutes: 20

    steps:
      - uses: actions/checkout@v4

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
          cache-dependency-path: |
            setup.py
            **/*requirements.txt
            tox.ini

      - run: make setup-ci

      - name: Run tests
        run: make test
        env:
          PYTEST_DISCORD_WEBHOOK: ${{ secrets.PYTEST_DISCORD_WEBHOOK }}

  test-installer:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04, ubuntu-24.04]
    concurrency:
      group: ${{ github.event_name }}-${{ github.workflow }}-installer-${{ matrix.os }}
      cancel-in-progress: true
    timeout-minutes: 20

    steps:
      - run: curl -sSL https://raw.githubusercontent.com/thombashi/tcconfig/master/scripts/installer.sh | sudo bash -x
